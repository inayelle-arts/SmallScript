<SYNTAX>		::= <IMPL_LIST_1>
<EOL>			::= \n
<IMPL_LIST> 	::= <IMPL> <EOL> <IMPL_LIST> | <IMPL> <EOL>
<IMPL>			::= <ASSIGN> | <FOR> | <COND> | <READ> | <WRITE>
<ASSIGN>		::= let @VAR = <T1> | let @VAR ~ <BOOL> ? <T1> : <T1>
<FOR>			::= for @VAR by <T1> to <T1> do <IMPL_LIST_1> rof
<REL>			::= != | == | < | > | <= | >=
<BOOL>			::= <T1> <REL> <T1>
<COND>			::= if <BOOL> then do <IMPL_LIST_1> else do <IMPL_LIST_1> fi

<READ>			::= stdin >> @VAR
<WRITE>			::= stdout << <T1> | stdout << @VAR | stdout << @CONST

<T>				::= [ <T1> + <F1> ]  | [ <T1> - <F1> ] | [ <F1> ]
<F>				::= <F> * <E1> | <F> / <E1> | <E1>
<E>				::= <E> ** <T1> | @VAR | @CONST | ( <T1> ) | - <T1>

<IMPL_LIST_1>	::= <IMPL_LIST>
<T1>			::= <T>
<F1>			::= <F>
<E1>			::= <E>