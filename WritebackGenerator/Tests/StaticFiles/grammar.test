<SYNTAX>		::= <IMPL_LIST_1>
<EOL>			::= \r | \n | \r\n
<IMPL_LIST> 	::= <IMPL> <EOL> <IMPL_LIST> | <IMPL> <EOL>
<IMPL>			::= <ASSIGN>
<ASSIGN>		::= let @VAR = <T1>

<IMPL_LIST_1>	::= <IMPL_LIST>

<T> ::= <T> + <E1> | <T> - <E1> | <E1>
<E> ::= <E> ** <R1> | <R1>
<R> ::= ( <T1> ) | <K>
<K>	::= @VAR | @CONST

<T1> 	::= <T>
<E1> 	::= <E>
<R1> 	::= <R>

#<IMPL>			::= <ASSIGN> | <FOR> | <COND_IF> | <READ> | <WRITE>
#<ASSIGN>		::= let @VAR = <T1> | let @VAR ~ <BOOL> ? <T1> : <T1>
#<FOR>			::= for @VAR by <T1> to <T1> do <IMPL_LIST_1> rof
#<REL>			::= != | == | < | > | <= | >=
#<BOOL>			::= <T1> <REL> <T1>
#<COND_IF>		::= if <BOOL> then do <IMPL_LIST_1> fi | if <BOOL> then do <IMPL_LIST_1> else do <IMPL_LIST_1> fi

#<READ>			::= stdin <READ_LIST>
#<READ_LIST>	::= >> @VAR <READ_LIST> | >> @VAR
#<WRITE>		::= stdout <WRITE_LIST>
#<WRITE_LIST>	::= << <T1> <WRITE_LIST> | << <T1>